blockchain/eth-todo-list/node_modules/
blockchain/node_modules/
blockchain/**/node_modules/

# Created by https://www.toptal.com/developers/gitignore/api/swift
# Edit at https://www.toptal.com/developers/gitignore?templates=swift

### Swift ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
ios/**/xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
ios/**/*.xcscmblueprint
ios/**/*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
ios/**/build/
ios/**/DerivedData/
ios/**/*.moved-aside
ios/**/*.pbxuser
ios/**/!default.pbxuser
ios/**/*.mode1v3
ios/**/!default.mode1v3
ios/**/*.mode2v3
ios/**/!default.mode2v3
ios/**/*.perspectivev3
ios/**/!default.perspectivev3

## Obj-C/Swift specific
ios/**/*.hmap

## App packaging
ios/**/*.ipa
ios/**/*.dSYM.zip
ios/**/*.dSYM

## Playgrounds
ios/**/timeline.xctimeline
ios/**/playground.xcworkspace

# Swift Package Manager
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
web/**/Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

ios/**/.build/

# CocoaPods
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
ios/**/Pods/
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

ios/**/Carthage/Build/

# Accio dependency management
ios/**/Dependencies/
ios/**/.accio/

# fastlane
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

ios/**/fastlane/report.xml
ios/**/fastlane/Preview.html
ios/**/fastlane/screenshots/**/*.png
ios/**/fastlane/test_output

# Code Injection
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

ios/**/iOSInjectionProject/

# End of https://www.toptal.com/developers/gitignore/api/swift


# Created by https://www.toptal.com/developers/gitignore/api/react
# Edit at https://www.toptal.com/developers/gitignore?templates=react

### react ###
web/**/.DS_*
web/**/*.log
web/**/logs
web/**/**/*.backup.*
web/**/**/*.back.*

web/**/node_modules
web/**/bower_components

web/**/*.sublime*

web/**/psd
web/**/thumb
web/**/sketch

# End of https://www.toptal.com/developers/gitignore/api/react


# Created by https://www.toptal.com/developers/gitignore/api/node
# Edit at https://www.toptal.com/developers/gitignore?templates=node

### Node ###
# Logs
web/**/logs
web/**/*.log
web/**/npm-debug.log*
web/**/yarn-debug.log*
web/**/yarn-error.log*
web/**/lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
web/**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
web/**/pids
web/**/*.pid
web/**/*.seed
web/**/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
web/**/lib-cov

# Coverage directory used by tools like istanbul
web/**/coverage
web/**/*.lcov

# nyc test coverage
web/**/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
web/**/.grunt

# Bower dependency directory (https://bower.io/)
web/**/bower_components

# node-waf configuration
web/**/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
web/**/build/Release

# Dependency directories
web/**/node_modules/
web/**/jspm_packages/

# TypeScript v1 declaration files
web/**/typings/

# TypeScript cache
web/**/*.tsbuildinfo

# Optional npm cache directory
web/**/.npm

# Optional eslint cache
web/**/.eslintcache

# Microbundle cache
web/**/.rpt2_cache/
web/**/.rts2_cache_cjs/
web/**/.rts2_cache_es/
web/**/.rts2_cache_umd/

# Optional REPL history
web/**/.node_repl_history

# Output of 'npm pack'
web/**/*.tgz

# Yarn Integrity file
web/**/.yarn-integrity

# dotenv environment variables file
web/**/.env
web/**/.env.test
web/**/.env*.local

# parcel-bundler cache (https://parceljs.org/)
web/**/.cache
web/**/.parcel-cache

# Next.js build output
web/**/.next

# Nuxt.js build / generate output
web/**/.nuxt
web/**/dist

# Gatsby files
web/**/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
web/**/.vuepress/dist

# Serverless directories
web/**/.serverless/

# FuseBox cache
web/**/.fusebox/

# DynamoDB Local files
web/**/.dynamodb/

# TernJS port file
web/**/.tern-port

# Stores VSCode versions used for testing VSCode extensions
web/**/.vscode-test

# End of https://www.toptal.com/developers/gitignore/api/node
web/**/**/node_modules/
